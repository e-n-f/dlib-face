#!/usr/bin/perl

while ($ARGV[0] eq '-S') {
	open(IN, "<$ARGV[1]");
	while (<IN>) {
		chomp;
		push @base, $_;
	}
	close(IN);

	shift; shift;
}

mkdir "/tmp/out.$$";

while (<>) {
	chomp;
	($h, $v, $r) = split(/,/);

	for $b (@base) {
		($h2, $v2, $r2) = split(/,/, $b);
		@f = split(/ /, $b);
		@of = split(/ /, $_);

		next if $h <= 0 || $h2 <= 0 || $v <= 0 || $v2 <= 0 || $r <= 0 || $r2 <= 0;

		$dist = abs(log($h / $h2)) +
		        abs(log($v / $v2)) +
		        abs(log($r / $r2));

		# print "$dist,$f[$#f],$_";

		if ($f[1] =~ /([0-9-]+)x([0-9-]+)\+([0-9-]+)\+([0-9-]+)/) {
			$wid = $1;
			$ht = $2;
			$x = $3;
			$y = $4;
			$ox = $x;
			$oy = $y;

			$x -= int($wid / 2);
			$wid *= 2;

			$y -= int($ht / 2);
			$ht *= 1.75;

			$bbox = "${wid}x$ht+$x+$y";
		} else {
			next;
		}

		if ($dist < 0.05) {
			if (1) {
				for ($i = 2; $i < 68 + 2; $i++) {
					($xx, $yy) = split(/,/, $f[$i]);
					$xx = $xx - $x;
					$yy = $yy - $y;
					$f[$i] = "$xx,$yy";
				}
			}
			$basename = $of[$#of];
			$basename =~ s/.*\///;
			$basename =~ s/^[0-9]+-//;
			next if -f "/tmp/out.$$/$basename.jpg";
			$cmd = "convert $of[$#of] \\( $f[$#f] -crop $bbox -virtual-pixel transparent -distort Affine '$f[2] $of[2] $f[10] $of[10] $f[18] $of[18]' \\) -composite /tmp/out.$$/$basename.jpg";
			print "$cmd\n";
			system "$cmd";
		}
	}
}
